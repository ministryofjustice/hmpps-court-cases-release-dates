{% extends "../../partials/prisonerLayout.njk" %}
{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "hmpps/components/court-cases-release-dates/service-header/macro.njk" import serviceHeader %}
{% from "../../partials/adjustmentsIntercept.njk" import adjustmentsIntercept %}
{% from "../../partials/recalculationRequiredPanel.njk" import recalcRequiredPanel %}
{% from "hmpps/components/court-cases-release-dates/latest-calculation-card/macro.njk" import latestCalculationCard %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "hmpps/components/court-cases-release-dates/things-to-do/macro.njk" import thingsToDo %}

{% set pageTitle = "Court cases and release dates - overview" %}
{% set activeSubNav = 'overview' %}

{% if showAdjustments %}
  {%- set adjustmentAdditionSummarys = [] -%}

  {% for adjustmentType, adjustmentData in aggregatedAdjustments.ADDITION | dictsort %}
    {%- set adjustmentRow= {
      key: {
        text: adjustmentData.typeText
      },
      value: {
        text: adjustmentData.total + " Day" + ("s" if days != 1 else "")
      }
    } -%}
    {% set adjustmentAdditionSummarys = (adjustmentAdditionSummarys.push(adjustmentRow), adjustmentAdditionSummarys) %}
  {% endfor %}

  {%- set adjustmentDeductionSummarys = [] -%}

  {% for adjustmentType, adjustmentData in aggregatedAdjustments.DEDUCTION | dictsort %}
    {% set matchingUnused = null %}
    {% for unused in unusedDeductions %}
        {% if unused.adjustmentType == adjustmentType %}
            {% set matchingUnused = unused %}
        {% endif %}
    {% endfor %}
    {%- set extraText = "" -%}
    {%- set unused = matchingUnused.unusedDays if matchingUnused else 0 -%}
    {% if unused > 0 %}
      {%- set extraText = " including " + unused + " day" + ("s" if unused != 1 else "") + " unused" -%}
    {% endif %}
    {%- set adjustmentRow = {
      key: {
        text: adjustmentData.typeText
      },
      value: {
        text: adjustmentData.total + " Day" + ("s" if days != 1 else "") + extraText
      }
    } -%}
    {% set adjustmentDeductionSummarys = (adjustmentDeductionSummarys.push(adjustmentRow), adjustmentDeductionSummarys) %}
  {% endfor %}
{% endif %}

{% block content %}

  <h1 class="govuk-heading-xl">Overview</h1>
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      <h2 class="govuk-heading-l">Release dates</h2>
      {% if not hasActiveSentences %}
        <p class="govuk-body">This person has no active sentences.</p>
        <p class="govuk-body">To calculate the release dates, you must enter active sentence information in NOMIS and <a id="try-again-no-active-sentences-id" data-qa="try-again-no-active-sentences-link" href=".">try again</a>.</p>
      {% elif isIndeterminateAndHasNoCalculatedDates %}
        <p class="govuk-body">This person is serving an indeterminate sentence and has no calculated dates.</p>
        <p class="govuk-body">You will need to <a id="manual-calc-link-id" data-qa="manual-calc-link" href="{{ calculateReleaseDatesUiUrl }}/calculation/{{ prisoner.prisonerNumber }}/reason">manually enter the approved dates</a>.</p>
      {% elif anyThingsToDo %}
        {{ thingsToDo(serviceDefinitions, 'all') }}
      {% elif latestCalculationConfig %}
        {{ latestCalculationCard(latestCalculationConfig) }}
      {% endif %}

      <p class="govuk-body govuk-!-margin-top-4">

        <a href="{{ calculateReleaseDatesUiUrl }}?prisonId={{ prisoner.prisonerNumber }}">View all release dates</a>

      </p>

      <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">

      {% if showAdjustments %}
        <h2 class="govuk-heading-l">Adjustments</h2>
        {% if aggregatedAdjustments.ADDITION | length or aggregatedAdjustments.DEDUCTION | length %}

          {% if adjustmentAdditionSummarys | length %}
            <h3 class="govuk-heading-m">Additions</h3>
            {{ govukSummaryList({
              rows: adjustmentAdditionSummarys,
              classes: "govuk-!-margin-bottom-7"
            }) }}

          {% endif %}

          {% if adjustmentDeductionSummarys | length %}
            <h3 class="govuk-heading-m">Deductions</h3>
            {{ govukSummaryList({
              rows: adjustmentDeductionSummarys,
              classes: "govuk-!-margin-bottom-7"
            }) }}

          {% endif %}

        {% else %}
          <p class="govuk-body govuk-!-margin-bottom-7">There are no active adjustments for {{ prisoner | firstNameSpaceLastName }}</p>
        {% endif %}

        <p class="govuk-body govuk-!-margin-top-4">
          <a href="{{ adjustmentsUiUrl }}/{{ prisoner.prisonerNumber }}">View all adjustments</a>
        </p>

        <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">

      {% endif %}

      {% if showRecalls %}
      <h3 class="govuk-heading-l">Recalls</h3>

      {% if latestRecall %}

        {{ recallCard(latestRecall) }}

        <p class="govuk-body govuk-!-margin-top-4">
          <a href="{{ recallsUiUrl }}/person/{{ prisoner.prisonerNumber }}">View all recalls</a>
        </p>

      {% else %}
          <p> There are no recalls recorded.</p>
          {{ govukButton({
            classes: "govuk-button--secondary",
            text: "Record a recall",
            preventDoubleClick: true,
            href: recallsUiUrl + '/person/' + prisoner.prisonerNumber + '/record-recall?entrypoint=ccards',
            attributes: {  'data-qa': 'create-new-recall-btn' }
          }) }}
      {% endif %}

      <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">

      {% endif %}

      <h2 class="govuk-heading-l">Next court hearing</h2>

      {% if not (nextCourtEvent | length) %}
        <p class="govuk-body">There are no upcoming court hearings</p>
      {% else %}
        {{ govukSummaryList({
          rows: [
            {
              key: {
              text: "Case reference"
            },
              value: {
              text: nextCourtEvent.caseReference or 'Not entered'
            }
            },
            {
              key: {
              text: "Location"
            },
              value: {
              text: nextCourtEvent.courtLocation
            }
            },
            {
              key: {
              text: "Hearing type"
            },
              value: {
              html: nextCourtEvent.courtEventType
            }
            },
            {
              key: {
              text: "Date"
            },
              value: {
              text: nextCourtEvent.startTime | dateTime
            }
            }
          ]
        }) }}
      {% endif %}
      {% if hasReadOnlyNomisConfigAccess %}
        <h2 class="govuk-heading-l">Configuration</h2>
        <p><a href="/config">Configure Nomis read only screens</a></p>
      {% endif %}
    </div>
  </div>

{% endblock %}

{%  macro recallCard(recall) %}
  <div class="govuk-summary-card govuk-!-margin-bottom-6">
    <div class="govuk-summary-card__title-wrapper">
      <h2 class="govuk-summary-card__title">Recalled on {{ recall.recallDate | date }}
        <span class="moj-badge moj-badge--green govuk-!-margin-bottom-1 govuk-!-margin-left-1">Active</span>
      </h2>
      <ul class="govuk-summary-card__actions">
        <div class="">
          <li class="govuk-summary-card__action">
            <a class="govuk-link" href={{ recallsUiUrl + '/person/' + prisoner.prisonerNumber + '/edit-recall/' + recall.recallId + '?entrypoint=ccards' }}>Edit<span class="govuk-visually-hidden"> recall recorded on {{ recall.recallDate | date }}</span></a>
          </li>
        </div>
      </ul>
    </div>
    <div class="govuk-summary-card__content" id="recall-summary">
      <div class="govuk-grid-row govuk-!-padding-bottom-2 govuk-!-margin-top-2">
        <div class="govuk-grid-column-one-half">
          {{ cardInfo('Recall type', recall.recallType.description) }}
          {{ cardInfo('Location', recall.location) }}
        </div>
        <div class="govuk-grid-column-one-half">
          {{ cardInfo('Arrest date',  recall.returnToCustodyDate | date if recall.returnToCustodyDate else 'In prison at recall' ) }}
          {{ cardInfo('UAL (unlawfully at large)', recall.ualString ) }}
        </div>
      </div>
    </div>
  </div>
{% endmacro %}

{% macro cardInfo(field, value) %}
  <h3 class="govuk-heading-s govuk-!-margin-bottom-1">{{ field }}</h3>
  <p class="govuk-body govuk-!-margin-bottom-2">{{ value }}</p>
{% endmacro %}
